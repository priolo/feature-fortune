*** STRIPE:Event:type:account.application.authorized
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758790474885
}
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE "AccountRepo"."id" IN (?) -- PARAMETERS: ["id-user-1"]
query: BEGIN TRANSACTION
query: UPDATE "accounts" SET "stripeAccountId" = ? WHERE "id" IN (?) -- PARAMETERS: ["acct_1SBAvh3Lk7DwTLsd","id-user-1"]
query: COMMIT
INFO: /typeorm/accounts :: node:execute
{
  type: 'save',
  payload: {
    id: 'id-user-1',
    stripeAccountId: 'acct_1SBAvh3Lk7DwTLsd',
    name: null,
    avatarUrl: null,
    githubId: null,
    stripeCustomerId: null,
    stripePaymentMethodId: null
  },
  sender: '/http/router',
  sendTime: 1758790474890
}
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccoun  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "A  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
*** STRIPE:Event:type:account.updated
  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
  sender: '/http/router',
  sendTime: 1758790478631
}
*** STRIPE:Event:type:person.created
  sender: '/http/router',
  sendTime: 1758790478631
}
  sender: '/http/router',
  sendTime: 1758790478631
  sender: '/http/router',
  sendTime: 1758790478631
  sender: '/http/router',
  sender: '/http/router',
  sender: '/http/router',
  sender: '/http/router',
  sender: '/http/router',
  sendTime: 1758790478631
  sender: '/http/router',
  sendTime: 1758790478631
}
  sender: '/http/router',
  sendTime: 1758790478631
  sender: '/http/router',
  sendTime: 1758790478631
}
  sender: '/http/router',
  sendTime: 1758790478631
}
  sender: '/http/router',
  sendTime: 1758790478631
}
  sender: '/http/router',
  sendTime: 1758790478631
  sender: '/http/router',
  sendTime: 1758790478631
  sender: '/http/router',
  sender: '/http/router',
  sender: '/http/router',
  sender: '/http/router',
  sender: '/http/router',
  sendTime: 1758790478631
}
}
*** STRIPE:Event:type:person.created
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758790478811
}
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758791041425
}
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:person.updated
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758791063161
}
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758791071763
}
*** STRIPE:Event:type:account.external_account.created
*** STRIPE:Event:type:person.updated
*** STRIPE:Event:type:account.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'getById',
  payload: 'id-user-1',
  sender: '/http/router',
  sendTime: 1758791086720
}
*** STRIPE:Event:type:capability.updated
*** STRIPE:Event:type:capability.updated
query: SELECT "AccountRepo"."id" AS "AccountRepo_id", "AccountRepo"."email" AS "AccountRepo_email", "AccountRepo"."name" AS "AccountRepo_name", "AccountRepo"."avatarUrl" AS "AccountRepo_avatarUrl", "AccountRepo"."githubId" AS "AccountRepo_githubId", "AccountRepo"."stripeCustomerId" AS "AccountRepo_stripeCustomerId", "AccountRepo"."stripePaymentMethodId" AS "AccountRepo_stripePaymentMethodId", "AccountRepo"."stripeAccountId" AS "AccountRepo_stripeAccountId", "AccountRepo"."password" AS "AccountRepo_password", "AccountRepo"."salt" AS "AccountRepo_salt" FROM "accounts" "AccountRepo" WHERE (("AccountRepo"."id" = ?)) LIMIT 1 -- PARAMETERS: ["id-user-1"]
INFO: /typeorm/accounts :: node:execute
{
  type: 'find-one',
  payload: { where: { id: 'id-user-1' } },
  sender: '/http/router',
  sendTime: 1758791088575
}
INFO: /jwt :: node:execute
{
  type: 'encode',
  payload: { payload: { id: 'id-user-1', email: 'giuseppe.verdi@gmail.com' } },
  sender: '/http/router',
  sendTime: 1758791088580
}
